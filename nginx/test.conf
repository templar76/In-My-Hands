events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # Logging con supporto per Cloudflare
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    '"$http_cf_ray" "$http_cf_connecting_ip"';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;
    
    # Cloudflare Real IP
    # set_real_ip_from 173.245.48.0/20;
    # set_real_ip_from 103.21.244.0/22;
    # set_real_ip_from 103.22.200.0/22;
    # set_real_ip_from 103.31.4.0/22;
    # set_real_ip_from 141.101.64.0/18;
    # set_real_ip_from 108.162.192.0/18;
    # set_real_ip_from 190.93.240.0/20;
    # set_real_ip_from 188.114.96.0/20;
    # set_real_ip_from 197.234.240.0/22;
    # set_real_ip_from 198.41.128.0/17;
    # set_real_ip_from 162.158.0.0/15;
    # set_real_ip_from 104.16.0.0/13;
    # set_real_ip_from 104.24.0.0/14;
    # set_real_ip_from 172.64.0.0/13;
    # set_real_ip_from 131.0.72.0/22;
    # real_ip_header CF-Connecting-IP;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;
    
    # Rate limiting basato su IP reale di Cloudflare
    limit_req_zone $http_cf_connecting_ip zone=api:10m rate=20r/s;  # Aumentato da 10r/s a 20r/s
    limit_req_zone $http_cf_connecting_ip zone=login:10m rate=5r/m;
    limit_req_zone $http_cf_connecting_ip zone=upload:10m rate=5r/m;  # Zona specifica per upload
    
    # Upstream servers
    upstream client_upstream {
        server client:80;  # ✅ Corretto: container usa porta 80
    }
    
    upstream server_upstream {
        server server:4000;  # ✅ Già corretto
    }
    
    # Server HTTPS con SSL
    server {
        listen 80;
        listen 443 ssl;  # Aggiunto ssl
        server_name dev.inmyhands.it;
        
        # Configurazione SSL con certificati Cloudflare Origin
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/cert.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        
        # Security headers per Cloudflare
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
        
        # Cloudflare headers
        add_header X-Served-By "nginx-docker" always;
        
        # API routes
        location /api/ {
            limit_req zone=api burst=40 nodelay;  # Aumentato da 20 a 40
            proxy_pass http://server_upstream;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $http_cf_connecting_ip;
            proxy_set_header X-Forwarded-For $http_cf_connecting_ip;
            proxy_set_header X-Forwarded-Proto https;  # Sempre HTTPS da Cloudflare
            proxy_set_header CF-Ray $http_cf_ray;
            proxy_set_header CF-Visitor $http_cf_visitor;
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 300s;
            proxy_connect_timeout 75s;
        }
        
        # Auth routes con rate limiting più severo
        location /api/auth/ {
            limit_req zone=login burst=5 nodelay;
            proxy_pass http://server_upstream;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $http_cf_connecting_ip;
            proxy_set_header X-Forwarded-For $http_cf_connecting_ip;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header CF-Ray $http_cf_ray;
        }
        
        # Static files
        location /static/ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            proxy_pass http://client_upstream;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-Proto https;
        }
        
        # React app
        location / {
            proxy_pass http://client_upstream;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $http_cf_connecting_ip;
            proxy_set_header X-Forwarded-For $http_cf_connecting_ip;
            proxy_set_header X-Forwarded-Proto https;
            proxy_cache_bypass $http_upgrade;
            
        }
        
        # Health check per Cloudflare
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Blocca accesso a file sensibili
        location ~ /\.(env|git) {
            deny all;
            return 404;
        }
        
        location ~ \.(env|config)$ {
            deny all;
            return 404;
        }
    }
}
    